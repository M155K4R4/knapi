#!/usr/bin/env php
<?php

use App\Server\Driver;
use App\Server\ServerUtils;
use Monolog\Handler\StreamHandler;
use Monolog\Logger;
use Swoole\Http\Request;
use Swoole\Http\Response;
use Swoole\Http\Server;
use Symfony\Component\Console\Input\ArgvInput;
use Symfony\Component\Debug\Debug;
use Symfony\Component\Dotenv\Dotenv;

set_time_limit(0);

require __DIR__ . '/../vendor/autoload.php';

if (!isset($_SERVER['APP_ENV'])) {
    if (!class_exists(Dotenv::class)) {
        throw new \RuntimeException('APP_ENV environment variable is not defined. You need to define environment variables for configuration or add "symfony/dotenv" as a Composer dependency to load variables from a .env file.');
    }
    (new Dotenv())->load(__DIR__ . '/../.env');
}

$input = new ArgvInput();
$env = $input->getParameterOption(['--env', '-e'], $_SERVER['APP_ENV'] ?? 'dev');
$debug = ($_SERVER['APP_DEBUG'] ?? ('prod' !== $env)) && !$input->hasParameterOption(['--no-debug', '']);
$host = $input->getParameterOption(['--host'], '127.0.0.1');
$port = (int) $input->getParameterOption(['--port', '-p'], 9501);
$output = $input->getParameterOption(['--output', '-o'], 'php://stdout');

$logger = new Logger('swoole', [new StreamHandler($output)]);
$server = new Server($host, $port, SWOOLE_BASE);

if ($debug) {
    umask(0000);

    if (class_exists(Debug::class)) {
        Debug::enable();
    }
}

$driver = new Driver($env, $debug, $logger);
$driver->boot();

$server->on('request', function (Request $request, Response $response) use ($driver) {
    $driver->handle($request, $response);
});

$logger->info(\sprintf('Swoole HTTP Server started on http://%s:%d', $host, $port), [
    'env'          => $env,
    'debug'        => $debug ? 'true' : 'false',
    'gc_enabled'   => gc_enabled() ? 'true' : 'false',
    'memory_limit' => ServerUtils::formatBytes(ServerUtils::getMaxMemory()),
]);
$server->start();
