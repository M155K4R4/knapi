security:
  methods:
    header: BearerAuthHeader
    query: QueryParamToken

  open_paths:
    /token: ['post']
    /token/refresh: ['post']
    /articles: ['get']
    /articles/{id}: ['get']
    /comments: ['get']
    /comments/{id}: ['get']
    /comment_replies: ['get']
    /comment_replies/{id}: ['get']
    /articles/{id}/comments: ['get']
    /articles/{id}/comments/{id}: ['get']
    /articles/{id}/ratings: ['get']
    /articles/{id}/ratings/{id}: ['get']
    /projects: ['get']
    /projects/{id}: ['get']
    /teams: ['get']
    /teams/{id}: ['get']
    /ratings: ['get']
    /ratings/{id}: ['get']
    /tags: ['get']
    /tags/{id}: ['get']
    /categories: ['get']
    /category/{id}: ['get']
    /security_roles: ['get']
    /security_roles/{id}: ['get']
    /images: ['get']
    /images/{id}: ['get']

paths:
  /token:
    post:
      tags: ['Token']
      consumes: application/json
      produces: application/json
      summary: Authenticate using credentials
      description: Authenticate using credentials
      parameters:
        - name: credentials
          in: body
          description: Valid User credentials
          schema:
            type: object
            properties:
              username:
                type: string
              password:
                type: string
      responses:
        200:
          description: Successfully generated token
          schema:
            type: object
            properties:
              token:
                type: string
                description: JWT Access Token
              refresh_token:
                type: string
                description: Refresh Token
        401:
          description: Invalid Refresh Token
          schema:
            type: object
            properties:
              code:
                type: string
                description: Error code
              message:
                type: string
                description: Error message

  /token/refresh:
    post:
      tags: ['Token']
      consumes: application/json
      produces: application/json
      summary: Authenticate using refresh token
      description: Authenticate using refresh token
      parameters:
        - name: refresh_token
          in: body
          description: Valid refresh token
          schema:
            type: object
            properties:
              refresh_token:
                type: string
                description: Refresh Token
      responses:
        200:
          description: Successfully generated token
          schema:
            type: object
            properties:
              token:
                type: string
                description: JWT Access Token
              refresh_token:
                type: string
                description: Refresh Token
        401:
          description: Invalid Refresh Token
          schema:
            type: object
            properties:
              code:
                type: string
                description: Error code
              message:
                type: string
                description: Error message

  /images/upload:
    post:
      tags: ['Image']
      consumes: multipart/form-data
      produces: application/json
      summary: Create an Image resource from file
      description: Create an Image resource from uploaded file
      parameters:
        - name: image
          in: formData
          type: file
          description: Image file to create resource from
      responses:
        200:
          description: Successfully generated token
          schema:
          $ref: "#/definitions/Image-ImageRead"
        400:
          description: Invalid input

  /comments/{id}/comment_replies:
    post:
      tags: ['Comment', 'CommentReply']
      consumes: application/json
      produces: application/json
      summary: Adds a Comment Reply to an Article
      description: Adds a Comment Reply to an Article resource as current user
      parameters:
        - name: id
          in: path
          type: string
          format: uuid
          required: true
        - name: reply
          in: body
          schema:
          $ref: "#/definitions/CommentReply-ReplyWriteLess"
      responses:
        200:
          description: Successfully created resource
          schema:
            "$ref": "#/definitions/CommentReply-ReplyRead"
        400:
          description: Invalid input

  /articles/{id}/ratings:
    post:
      tags: ['Article','Rating']
      consumes: "application/json"
      produces: "application/json"
      summary: "Adds a Rating to an Article."
      description: "Adds a Rating to an Article resource as current user."
      parameters:
        - name: id
          in: path
          type: string
          format: uuid
          required: true
        - name: comment
          in: body
          schema:
            $ref: "#/definitions/Rating-RatingWriteLess"
      responses:
        200:
          description: Successfully created resource
          schema:
            $ref: "#/definitions/Rating-RatingRead"
        400:
          description: "Invalid input"

  /articles/{id}/comments:
    post:
      tags: ['Article', 'Comment']
      consumes: application/json
      produces: application/json
      summary: Adds a Comment to an Article
      description: Adds a Comment to an Article resource as current user
      parameters:
        - name: id
          in: path
          type: string
          format: uuid
          required: true
        - name: comment
          in: body
          schema:
            $ref: "#/definitions/Comment-CommentWriteLess"

      responses:
        200:
          description: Successfully created resource
          schema:
            $ref: "#/definitions/Comment-CommentRead"
        400:
          description: Invalid input
