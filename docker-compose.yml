version: "3"

volumes:
    mysql_data: {}
    composer_cache: {}

services:
    mysql:
        image: mysql:5.7
        ports:
           - "3306:3306"
        environment:
           - MYSQL_RANDOM_ROOT_PASSWORD=yes
           - MYSQL_DATABASE=database
           - MYSQL_USER=user
           - MYSQL_PASSWORD=password
        volumes:
           - mysql_data:/var/lib/mysql

    redis:
        build:
            context: ./docker/redis
        environment:
            - REDIS_PASSWORD=redis
        ports:
            - "6379:6379"

    # PHP Application running on PHP-FPM (MySQL)
#    backend:
#        depends_on:
#            - mysql
#            - redis
#        build: .
#        env_file: .env.dev
#        volumes:
#            - .:/usr/src/api
#            - /usr/src/api/var
#            - composer_cache:/root/.composer

    standalone:
        depends_on:
            - mysql
            - redis
        build:
            dockerfile: Dockerfile.standalone
            context: .
            args:
                - KNIT_API_TAG=0.8.0-dev
        env_file: .env.swoole
        environment:
            - PORT=8899
        volumes:
            - .:/usr/src/api
            - /usr/src/api/var
            - composer_cache:/root/.composer
        ports:
            - "8100:8899"

#    ppm:
#        depends_on:
#            - mysql
#            - redis
#        image: phppm/nginx
#        command: --debug=1 -vv --app-env=dev --static-directory=public/
#        volumes:
#            - .:/var/www
#        ports:
#            - "8090:80"

    # Nginx
#    api:
#        depends_on:
#            - backend
#        build:
#            context: ./docker/api
#        ports:
#            - "8080:80"
#        volumes:
#            - ./public:/usr/src/api/public
#            - ./vendor:/usr/src/api/vendor

    ## Debug/DevOps

    # Varnish (Http Cache)
#    varnish:
#        depends_on:
#           - api
#        build:
#           context: ./docker/varnish
#        volumes:
#            - ./docker/varnish/conf:/etc/varnish:ro
#        ports:
#           - "80:80"

#    elasticsearch:
#        build:
#            context: docker/elasticsearch
#        ports:
#            - "9200:9200"
#
#    logstash:
#        build:
#            context: docker/logstash
#        environment:
#            - xpack.monitoring.enabled=false
#        ports:
#            - "9600:9600"
#        depends_on:
#            - redis
#            - elasticsearch
#
#    kibana:
#        build:
#            context: docker/kibana
#        environment:
#            - xpack.monitoring.enabled=false
#        depends_on:
#            - elasticsearch
#        ports:
#            - "5601:5601"

    pma:
        build:
            context: ./docker/pma
        depends_on:
            - mysql
        environment:
            - PMA_HOST=mysql
            - PMA_USER=user
            - PMA_PASSWORD=password
        ports:
            - "8000:80"
